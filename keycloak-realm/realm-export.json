{
  "id": "36aa2f26-748a-4bdd-b0ea-77b984c5e64f",
  "realm": "my-realm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "1ce6c12a-aaca-4e2a-ae75-a2403eb6a4e4",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "36aa2f26-748a-4bdd-b0ea-77b984c5e64f",
        "attributes": {}
      },
      {
        "id": "d9c74643-87b3-4504-a4fd-aa7b5b3c444d",
        "name": "default-roles-my-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "36aa2f26-748a-4bdd-b0ea-77b984c5e64f",
        "attributes": {}
      },
      {
        "id": "3c65b7ea-0928-437c-a19b-675dc5089f0b",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "36aa2f26-748a-4bdd-b0ea-77b984c5e64f",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "54ddacb5-5049-4f03-90d3-10a126029e47",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "4a7e0320-5fde-44d3-a7a1-2f72b8302818",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-events",
                "manage-clients",
                "view-identity-providers",
                "manage-realm",
                "query-users",
                "query-realms",
                "query-clients",
                "manage-users",
                "query-groups",
                "view-authorization",
                "manage-events",
                "view-clients",
                "manage-identity-providers",
                "view-realm",
                "impersonation",
                "manage-authorization",
                "create-client",
                "view-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "86d4d22c-0d15-45ff-9fcc-3c6697695ea8",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "ba7c0074-cf95-4e1e-92d2-b112c20282e8",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "5c920e68-0b94-4eaf-9730-fdab8cf116c0",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "ad3feb81-cca3-4afd-bffd-0d125e684d59",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "af86958f-a11f-4611-97a8-c7665c2fe4dd",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "bbbcf75c-05cf-487a-abbb-dae3456ba810",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "8aa8ac10-9692-4403-abe9-40424c1fd5a8",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "81871f92-b745-4425-91cd-281362570c3a",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "620d826f-ec83-4d7b-9b84-d55902dd7c35",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "3762292d-f7ce-4c1f-a024-e896dac071e6",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "bbaed7ea-810e-4490-a4c7-f058da9599d5",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "0e8e87d5-98f0-4bee-9de0-cd49e922a3c5",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "5bfd85c3-9b67-4006-bf17-ddaba0669e78",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "07ef760f-2468-441f-b53d-e72c9ffd4e10",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "6f95eae8-be74-46e5-a901-9842cb9dfeed",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "2124d012-9577-4b57-9a36-4f3ba7184d8c",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        },
        {
          "id": "c901e7dc-30bf-4852-b27d-8b368c490627",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
          "attributes": {}
        }
      ],
      "test": [],
      "http://localhost:8080/saml2/service-provider-metadata/keycloak": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "0966d824-f05e-4ed1-af07-f7156ef8dfb2",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "c05c3571-7e2f-4c94-b42b-d4a42271ba5d",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "c5f6cc4d-cbbc-4d64-a33b-ed405fd8fc5c",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
          "attributes": {}
        },
        {
          "id": "0d3dfb2c-d670-43d3-8d9b-86df8ed45c50",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
          "attributes": {}
        },
        {
          "id": "71917cae-fe4f-4a5a-930c-5f208a0f23e1",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
          "attributes": {}
        },
        {
          "id": "dee31277-7be0-413d-a74d-cd45b99710db",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
          "attributes": {}
        },
        {
          "id": "a9633292-23df-4546-bf00-ae70d4444912",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
          "attributes": {}
        },
        {
          "id": "d1dcc4f2-2e5f-4248-9aac-7381aa2832de",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
          "attributes": {}
        },
        {
          "id": "eefce9e2-b211-453a-b5dc-69c7c02e5d49",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
          "attributes": {}
        },
        {
          "id": "97d99919-cf13-47f1-b3d2-689df8db8f12",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "d9c74643-87b3-4504-a4fd-aa7b5b3c444d",
    "name": "default-roles-my-realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "36aa2f26-748a-4bdd-b0ea-77b984c5e64f"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "1b67545c-0ac7-48fc-8986-f1bff3975f19",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/my-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/my-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "77ae5d24-10ac-4e3a-ac63-1a782d86fcbc",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/my-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/my-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "0deb3e04-eb97-49b1-86aa-d9ba28f1593b",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "55feccde-fd8c-4b70-ad63-c72b07c6d5e0",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c05c3571-7e2f-4c94-b42b-d4a42271ba5d",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1f4a3684-6faa-46f7-ae88-ce33b17a60cd",
      "clientId": "http://localhost:8080/saml2/service-provider-metadata/keycloak",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:8080/",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "http://localhost:8080"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "post.logout.redirect.uris": "*",
        "saml.server.signature.keyinfo.ext": "false",
        "saml.signing.certificate": "MIICnzCCAYcCBgGVsV8NWzANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhrZXljbG9hazAeFw0yNTAzMjAwMjI0MTFaFw0zNTAzMjAwMjI1NTFaMBMxETAPBgNVBAMMCGtleWNsb2FrMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtCFt6j4mMJ7NTrORfwZBUYn5Z+eDynQJlFUgxJsMYFO0qUtmC9xG21tMQM/5VhfokYNfGnSp7L/DjtVIvYZCrRBilzr5cKb5HC7FPZasy2lkdShzELrtgbxbOQoSje3oUUN9HpgbC5u8XwLeKHFP+IrRf9AWIwr8D8z73KUb/EZtS35NXqiA9S2zdYmBpBIXS8CNTY3y5JbhLxTMDCRACKSbAVr701dlnh2eQaeQQbmhH+6prlpzmeEn/RJmo+d+5CBOLH8/VZeZs+rsiiSVVuLv7PhRIvlVMwDp9qiXrw8J2ogXZhOnp1sPMQhtJZ855GFD7xxIcU5FBXj3alv5yQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCqkf3S6oXzSwPp04BlCo9GIZoekYBpkDRwPU7+F0ddqvTlKcbyEQdHOFzS7ByusS8HAKMZk7FA3PchE7zV58H6j7SsxHjs/a3aQgsjeZP9SmdSGpDB+6T0rrlkXufBVfNELXug0UHtdiLF5Tp1ak/R3XJ92eUOCkEFslxZ0BTe16iUT/bZgnL9cs7KPHYqA9s/i/I59+QBOj0nAnNWDoiwYRB1s2oFGgc1eipQUpD+ILEeQMYqtmUPbSmSwTmmnLiQUdbzZfky6s4xUviWMBrLkx//XtroTNI/jfDk6wfaZIwEIcMPtvRphs1EDDoc9Hb3PyKZpLwN1ZMy/d/HXisT",
        "realm_client": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml.client.signature": "false",
        "saml.signing.private.key": "MIIEpAIBAAKCAQEAtCFt6j4mMJ7NTrORfwZBUYn5Z+eDynQJlFUgxJsMYFO0qUtmC9xG21tMQM/5VhfokYNfGnSp7L/DjtVIvYZCrRBilzr5cKb5HC7FPZasy2lkdShzELrtgbxbOQoSje3oUUN9HpgbC5u8XwLeKHFP+IrRf9AWIwr8D8z73KUb/EZtS35NXqiA9S2zdYmBpBIXS8CNTY3y5JbhLxTMDCRACKSbAVr701dlnh2eQaeQQbmhH+6prlpzmeEn/RJmo+d+5CBOLH8/VZeZs+rsiiSVVuLv7PhRIvlVMwDp9qiXrw8J2ogXZhOnp1sPMQhtJZ855GFD7xxIcU5FBXj3alv5yQIDAQABAoIBADJcKEE1h/LO6wJmVLapNojH5NkmUmO/JlB4rlUZLhAeRuOP52NIfezk7QAvxPtLauOH0YZxeHJuuItN2OzXxPtimdXDEKrsm7fD4bQS1JN4DzRsDyNtx2oekXh0dvSEP4+8qRXtG56Wt0bu49J1v5ByqxirQg0hDJCUVBP/ez//rZqEvdosfxNWqDnSzZqLIxM5dTwrKZvf1MOMFNmQ5dhU1HDPYPx2a1KnvVEkcZJw09n1sw/THj5FnkEN7GgKuPOi9dLS/4iUO743mE1WrRAdoOeGkALcoyL9f/sFqCUKMFvCbrQaRL2hIIJd6NsY6fCwJ5Be4L8UpQivs0s6iPMCgYEA81PPwmYoDkl7G0KhbwySbOaOVdet4cWxLi4Jmgz/iJXy7vyAao7c7um1PHFJW0FAf+xlABx+8J+F7DEUvMI4tml0sl1+s/ti1C6qqu7d/D0I7EolZfJEkLi5+KoD0gQkDOeqHcbMqpo8G0ppst/rYorw4Ume3zHm90xNdUD2YM8CgYEAvYMKJPaOBm7IruV+rwQpZse/FryL6Qjpz+DyClQRb8an2lc/oQXkgaEz11cU0tufqsWD7wCzcj+GsyRv/TlyBPq86dLcYU2JcZeQPPRwDdUCaeTniKIynoyV2zIPaQgAQTWHqEGhjnVKSqcFZ2lwV6w8MJd/cwrkRgqIMPcNMecCgYEA7UaGKtf5KW1oGX4Q87v7sSvmEjleOvHPQ+vquwj/yY4HNhqNkts6/9JwQ79ovA7WOagoGUKwWi4Epvx5b1Opf983x5K6MgHqLmRPUp3ZY9WUtO3cqBvl1oX7+0q2rP4StW7WiXDJNXdvM2GNzrrhytcX62gh/x2nTvFd+v/dASsCgYBr3kWM6oXGpZI28svb5JuINBPRZjqgxwEG4PwD4vwVylZKUjUWe1soadAvNxLUPkwwkMJa7OQ3GG+cUhYoZWU/7lRPJ0VnYRHlhSaFe4C4btEz4yXiwKfdVRoLLQBWgUZb15NCszC4/Ivv2AecaAiY7qFH60ORANcUAvSoIkbxawKBgQClRSaxQn5rkA9Y2uL/Q9S7+bdla2jzviqJXIZk1nWb/V5y4l9t1UG59aQZ1FOMyaJVYKt1YCEuZQo65qD/aTx4cOTKu1z1+TcEaLBGssTOtk7reIVtfO3l46eDTmnDYi46xr7DsLhF/ztXozC9MopsptGFZ94DGOpB9U02DRddhg==",
        "saml.allow.ecp.flow": "false",
        "saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer": "NONE",
        "saml.assertion.signature": "true",
        "saml.encryption.private.key": "MIIEowIBAAKCAQEArk2EV1Lvd1XRK7UNR/jyGJ55nrDWnFkdkw9sK98Q+GfW37J7SeRk/iNQIzkHLKlBrcgdteVaBnBhal5YWSy2xcyneM5+o4RaEs9mrIQ0jETcplJIlE1EBbSzvPNKR3FwiW3myu1+pShFlL+jd57JQcWqa/7iOrTBD8u5Zh2pK1lsvwfAX7K+FsL8mZNhu6UjL8YFpB0xE9KJWc9qPsZ6tAQY6D1HPKz9yemQ2iUnjl5CNWTD+Tbq24cfAn8HpYqwmsOpz7l+XWY5vwsofQUQ5mNN9g8zPrXrdPXBCA+khcNp4kBtjO4bOBITaYxN423xs7AJdKB7kfPdKQakuNFnDQIDAQABAoIBABJ6RjrJoHgqoUt8XIWSNvv0JNl1TrLxYYi6/FEkSxTCUU2Siq5ZJ3mnfbHWNFQAN2W4Tqn/P81p8XHIwZ3mdxO9780HOvaTq8bNtMk6FKYAENIS6/3IuRrPvrQbqHataGwxOeOuTJwuij3MGQSv0Q8HaNsdAJePnN3TT3qrT0k4ezTKnX3CDCl3+cNrOQ75safkJcNvx2/S5GwwpS+7Ik8nAQDb5eENxZZEltuzKVr4+e7SXS4G/7EYIUFMCwKyiOVVttrZJ7bfCa/pq+wNtnGaqlwnZFtJYZxcmOewL2kBSvRAv0FhPsW/xrrDwjPtFBIbvwF2zE9ohObNBsmLmBECgYEA5aOLI2t3Id3iXjBLnnzw56zq8IsC5Ir8CSudllIth4pdNbxETr5cNbg8dRliumx21NhMoi37h/4imeoPRkObSr3Ll08w7nBUxqVE91vDZVDAHy3cJxpnP6xqqPWp609MqerbFDrqcYLcdglNezx95coaQR1fbzF65qjx4wBcy1UCgYEAwk/MfRqSUOeaw+hjJDPcigMhU7e/0uokCazIX79pBx+nlO44Iy7wmoYSZfjgv/+H/rLiJmKreBXxMR8+DgkX7VIHx+bEa0xiVA7ox5bsyp36vAIBGZD2cVotMi+5kSb2PqW72Um98Pi/58Bv3lN3kqO1wyM2vUHNkon1fPW83NkCgYEA5RecBpD+f73hSD/8ILfaifYbSDAWibQSLn/hrgZ7v32M8b/JkZkdWsZbIiNaOEte3YaQJTekeQ5SrKQx6tIliZIBGwl48lcEbEySmgdkzp2ZnUFeIXCY0pAKtFao1sT84YMYXn1MSEPZ9rPfJXO60dUnDhDklYSSbKzc667/5CUCgYBVdG7EHil290RzIAJp63z0HUhM3yS3h01uC9Tbdvyjq2Ix90os/vnFm2z/96IwDhsrAlS++OncGBpItiq+VXV2Y3sUiQKdBazAtwXcsR1WRn/8qwz8x2n6k+QIjECZ+36UMqMYfnvQPDV5oIISTrbpgKHxPc1XEldsOMwDtrbmkQKBgBJNJ32Yl388a1LzSATHVx9XFxNPDO2+wY6HbEpGUrqXh2tQQtDB+IBJoGReSS+xMoSc7UCTJwo0rZdvmK++nZONk1F0nIm8tJfxEnaxa3ste1tZqAScvWM754frgAgndXXYcTQ91ZsDbHiKhGWvpa6lyU9i72MbVpQ5ie/vlqna",
        "saml_single_logout_service_url_post": "http://localhost:8080/logout/saml2/slo/keycloak",
        "saml.encrypt": "false",
        "saml_assertion_consumer_url_post": "http://localhost:8080/login/saml2/sso/keycloak",
        "saml.server.signature": "false",
        "saml.artifact.binding.identifier": "0QgeNR++vg3rDChn1fcxyPnMP9g=",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIICnzCCAYcCBgGVse2eGzANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhrZXljbG9hazAeFw0yNTAzMjAwNDU5NTRaFw0zNTAzMjAwNTAxMzRaMBMxETAPBgNVBAMMCGtleWNsb2FrMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArk2EV1Lvd1XRK7UNR/jyGJ55nrDWnFkdkw9sK98Q+GfW37J7SeRk/iNQIzkHLKlBrcgdteVaBnBhal5YWSy2xcyneM5+o4RaEs9mrIQ0jETcplJIlE1EBbSzvPNKR3FwiW3myu1+pShFlL+jd57JQcWqa/7iOrTBD8u5Zh2pK1lsvwfAX7K+FsL8mZNhu6UjL8YFpB0xE9KJWc9qPsZ6tAQY6D1HPKz9yemQ2iUnjl5CNWTD+Tbq24cfAn8HpYqwmsOpz7l+XWY5vwsofQUQ5mNN9g8zPrXrdPXBCA+khcNp4kBtjO4bOBITaYxN423xs7AJdKB7kfPdKQakuNFnDQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA5QUlsyrwGCIU3+ysf2l40cQ9wol9FvewX7yYxeORBHQv2uy7gPpnbWaC+WKnjj9pdLKqFIEizjcLb+8J7KNnMM07yljnO0lwyoSQob+Ka4vZGrLRCRhNyT1R+PRJDUFBqJmSnjNaFeKEyW7N7VzXLuidNTXXKRpkUSBg/Mgpy7Jbc0RrVBYRtzph1PGahH4h+VHwAjdbyX6hBceXblWuG4hI1Ix/d04td4Fa+YoHLpFlH0xWWA1RntVVYLVhXn6ZdFuLFfs/3FrkFOBAdUh/05G7g9J1jDXgU7652imlY5Rdeu6z5s7oq7Nohbcs4JV6R10Hxf4BiS6tznvKeXj3S",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "username",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "saml_organization",
        "role_list",
        "test-saml"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "42b7251e-4e90-4bb2-9d0e-616ce79a3023",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9bd6ed2e-c8a4-4733-be2d-5d25ec4fb69b",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/my-realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/my-realm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "0ce76f56-af35-4617-bd14-b005e830454c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "53c8a312-0a77-42e3-9c4e-d56ed57d2686",
      "clientId": "test",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:8080",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/login/saml2/sso/test"
      ],
      "webOrigins": [
        "http://localhost:8080"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "true",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml.signing.certificate": "MIIClzCCAX8CBgGVsgbISDANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0ZXN0MB4XDTI1MDMyMDA1MjcyM1oXDTM1MDMyMDA1MjkwM1owDzENMAsGA1UEAwwEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOkbaPh+0bOv7MAi4s0q0XeXk1t54YTaxnBLi3VCWGs7n5/Tv46RgHGZhaLgj0f9W04r9XxckRUdt+h+Zl5/91S9b9XtNRnHJIYMntVJ/ZkLo7pa5E818rldGYncTh/soq6bUrU51/vMAjWWxEJ7Ks92ykp38amRj2Q9BV4t7iRvsP1BOk4AdF6iKhSAj38Qg7PMGMx9IJp87jotxB1vIF+1U2v9wTfcpApCHbSkj6/5IL0Rk1addlOvnbbuQK5etq7l0QAXeoGEAXHYUAFyFfVeotTNkwr+0dwXuzEnb7KnFijyUVv+ROPwIUPTDPLCucwI/p+kaIBQo31ZvkwHElsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAABKE04vfSRYBZ91pJeVg3gkQBuTcBXJ5Xztj9yid8X2elDv4LzXbkG7EHfBSQ7/iG9cVgx5oG4U7huNKSD7+SS8iV+MEchJsGv+Ya6YL9YJxMJpbAJlJnG5VSvEqoeaLcHQb44AqjYcK3m3vmEulgheaZt4KNakaKw/q0CYWH0RH/ZRrWvEwHyAtPudpNNH4D9x3UpYvEl9QHfntNC0WmzJ1RteNKQIPeipy/d3LroffFKUtYrJTAIqoqMiCmR+AQkptZEdGbOG+fxma4LHIZGBtjalgAvVBr3+TfXpXvKy7NOcKp0CI8grzuzlEAWMCFrZXlOLD4zXtmXS7Ev5m0g==",
        "realm_client": "false",
        "saml.artifact.binding.identifier": "qUqP5cyxm6YcTAhz05Hph5gvu9M=",
        "saml.artifact.binding": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "username",
        "saml.signing.private.key": "MIIEowIBAAKCAQEA6Rto+H7Rs6/swCLizSrRd5eTW3nhhNrGcEuLdUJYazufn9O/jpGAcZmFouCPR/1bTiv1fFyRFR236H5mXn/3VL1v1e01Gcckhgye1Un9mQujulrkTzXyuV0ZidxOH+yirptStTnX+8wCNZbEQnsqz3bKSnfxqZGPZD0FXi3uJG+w/UE6TgB0XqIqFICPfxCDs8wYzH0gmnzuOi3EHW8gX7VTa/3BN9ykCkIdtKSPr/kgvRGTVp12U6+dtu5Arl62ruXRABd6gYQBcdhQAXIV9V6i1M2TCv7R3Be7MSdvsqcWKPJRW/5E4/AhQ9MM8sK5zAj+n6RogFCjfVm+TAcSWwIDAQABAoIBACkueHr+HJn8CH1hLGRGnj7cfmH4xEiuRcRs9DRBBlHbdLXNuNe9CM4I6zz9IxL6xXin93SC/faXC3h9bCRhwxYraWiHwYvOTLuJ2z2fFrhFACXaDN+ZjkoFEo/yZbLqIUtrkU8G6wtG3VUOT5nXHJcOS2qgigcE+iohRaN/xcSVyHNtmOoTYY8AU5R1S+x4NL7FWsaQNpbBQwNFQkKxDpB/LajdW/tx+JlGbEpCozYs7MAk+h7hQAz5UWwSZ9pEqoeyOY/J/kfUlJ+ya4W8nuDDce6Vf5buzHR1EN4SW8ohJABPa8PFfvq3Z+Dveh6iJENnG0Tf09LfIQR9NcUGoTECgYEA/hAdCjDrdiux22ElI8hvsNcuUo5SKrC1M4gEGObQUQIGmaXiaIFFjsSyFVVWW+PmTUIfoEjYR7H3Cr3c1X0snaAHvSwI+17Isjit1xKXRdxz8dxwJsTpfUX+Zowusi4PWg/G7oBioXOstAvjYkYKEl7ZCOSmadHXN1qNGw/cSt8CgYEA6uJk9x5yQ8uu70v9y3VxQiV92zSut1FlKf2OEApH7j4dJODLVKCGRyBZeP13Ym7lKzFSZC0jLVgmXjrUZPEmq8cq0ZVyykW8flA6AvIfvbb1VVeK97IQesQk+dT4KyILxRZlcp5giqAaVNhBJOa8Cg0beGgCAOvgmCUjWdJV5AUCgYEAwj4blcEVJQH/N1UsihEio7fA6Ml7NLxprX5ec5N0zZqY5TwYwAGl5qOn6/uUzSiO2Z6mg2tuQFJmKEZE4syTIehKQm26aEVteCUxc+/4zCbiVpZNALcoNOkgudKPmRbyEc9iLtLllb7U2csFDAu0g5sUoGIAgYM34lBO9dPIf00CgYASYAm0B266/Qk/cTt2mkZ0/UfeST3N25FFeq+Nc7By4+sVwnxFr5UxpUc6nuGjErfc7Cvc6GcTGg1OW93X08HJuHgSE1X6mwAHBbG0H0r6ZYDF32ZgwE5nvEaEQPP1M+Gl1n2zPM6iqanFr3FROLfHNYVLox9dARb98BHW6gyMHQKBgDbRX9lcxqnoQFjyk5YUyoP9X9aYeSjY1oVvzF4VIapsdarqJXLsyaQhfeYEc/qHNZ6RBlcDQtLasA/VaRsQoQb17/Vbi1hXS4qapBSHuJPIIkL//veCH5jxtewIxLqhwWbhFQi7KkrMKub46/2HGqZW1HQSF2VdcUZwFn5dkwIZ",
        "saml.allow.ecp.flow": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer": "NONE"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "saml_organization",
        "role_list"
      ],
      "optionalClientScopes": []
    }
  ],
  "clientScopes": [
    {
      "id": "7a4c265a-e4dc-4fd2-9047-bef0016d6012",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "58a150ef-0583-43b1-99c0-0c820bec9d09",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "f45e286a-0bca-4f1a-9a83-59477691cde8",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "78fa93b3-942d-4a92-9ecc-aefaac919cde",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0a487377-34fe-4fcb-aaf4-729abdd58bc2",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "02d8905a-2ab5-4de3-9674-f125d8e971bf",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "7b698eed-3499-4341-ac10-fe9afeed5d8d",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0e8aabbd-fe39-446e-ae97-0c5facdf245d",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "3e03137b-c95e-4dff-8450-35bd042ba1a9",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "14a1a326-cf1c-4b6a-a26e-f9f6967372db",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "98e944a5-1082-4ebb-9a4d-10c1ef7ef4ec",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "290230d7-b38e-4967-8f65-701040698398",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8434ccd3-d7ec-4de6-98de-bf72b2a1a141",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1827f0c9-76e5-45ed-831f-29746713f7a4",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "367cbaaa-3a94-4c0c-afbb-077ff41db076",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f7817ad4-d8f9-4e04-a147-2b41f3e48120",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6c525741-56ea-48d9-ba82-cc4fa41d7f17",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ab719a58-b680-4040-a62e-af135ab17ac9",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7827fefd-3eeb-4715-91e9-b33102febb11",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08d08360-715d-43e9-a378-2b4d38dc21e3",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "990bd8b6-65ac-46c2-8816-96c1a2e3188f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e3280e4f-a45c-4e69-ae3a-dd595f714a2c",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "0b97d2fc-82db-49c2-8426-9b4a4107defd",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "id": "6233fc53-be15-4d77-9dda-27b8fe484ba6",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4bb6c52b-ba14-4d24-8ac6-b0c3bd696e7f",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "e384e7c3-1379-4bee-9e31-5eea7a48bcbf",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "032a7fdc-40bb-48d6-9d45-270b46bc2fa9",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "17b78def-0e49-4a9d-8c75-683520b0398b",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dedb758b-d97b-4c80-b810-2a19f13b3a4c",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b85d0829-ff5a-47f5-a429-cbb71f5d183d",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "eada3555-0613-4638-8159-34b35920ed09",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "ee4cc190-83eb-413b-86a6-f6431fa76c3e",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "d1f75468-2958-4a32-8850-882a0359ff5f",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9bb0283a-9ad1-471c-ace0-21aedac04b8b",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ab5572ee-3370-4630-afea-15f9cde2c60a",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a73dbb73-bcc4-4057-8da8-34240462b0dd",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "43eb003b-d65d-4fd7-b5da-50c7c567ed2a",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3992ae50-ec19-4094-b76d-1d65508d2a25",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6a40cd0a-b242-4e5b-a525-a6714f808bd8",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "174e59e7-fdee-49bc-9b34-ca4ab9965306",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "11fe289a-d374-46bd-94b2-0f68ff860bbc",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "c0333ef6-db34-4dc4-b199-9524f3e5917b",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "47f450de-b632-41f2-af8a-aff195eaf19c",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "8ee8c647-3427-4b56-a039-2cb4f533fb87",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "a51d61d3-3aca-4093-854d-69d674406954",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "4a6d1bd9-0d24-47cf-a7f7-260172114773",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b9074a46-6012-4412-b67c-eb7738fe2eec",
      "name": "test-saml",
      "description": "",
      "protocol": "saml",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "58935b92-169f-46cd-8f99-2ee5cce54903",
          "name": "X500 email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "email",
            "friendly.name": "email",
            "attribute.name": "urn:oid:1.2.840.113549.1.9.1"
          }
        },
        {
          "id": "4433bb02-09a5-4bd9-84cf-cb65753642b6",
          "name": "X500 givenName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "firstName",
            "friendly.name": "givenName",
            "attribute.name": "urn:oid:2.5.4.42"
          }
        },
        {
          "id": "a7547376-6d85-446f-85c0-76a71417f06c",
          "name": "X500 surname",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "lastName",
            "friendly.name": "surname",
            "attribute.name": "urn:oid:2.5.4.4"
          }
        }
      ]
    },
    {
      "id": "0bb8b5d3-d8c8-4236-9b9c-7920b9242ab5",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "2fc77f5f-41b1-45d9-be92-19721cee08bd",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "144781ad-e2b7-4e6c-98ea-5b110606e350",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "b2c82cf7-7aaf-4caf-9040-5bbee210aa8c",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "d83ab709-73e5-43ac-83ac-6ce247697565",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "8d5a6186-206a-46f6-b193-d982b5fbdced",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "3bbdf31e-b329-48a5-bd52-4f0bed79c6be",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "92ad1816-4d10-4359-8e85-f5213f3266b3",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "ca770f5d-6c44-4d72-8c02-f1993002b64a",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "80acba8d-ab66-48ae-b1b2-70a88a714919",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "8bf0eabb-cc85-4189-b5b4-9af961f12a3e",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "480fb5e7-cf67-4205-a96f-c23162591181",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "22c4c3a2-c5aa-4343-a845-d7766662c837",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "a3fe5395-1b6e-4768-95f6-ba1d68449e04",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "543c67e4-468b-40e2-b15d-178a7200d832",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f23efecd-bfca-4451-80d5-8a4e3f8d19b9",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "59d42550-bc7c-45d1-8fd8-0b53afa0aa55",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b48bb4c6-ca94-4f4f-8035-57a9438c588d",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4c8ab138-c143-43c5-a2ca-c0ec46d2d1f0",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "135e389c-d1b0-48d6-8724-fba9b45ddfe5",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d09f425c-9ccc-4a60-adf9-08f8f8fec442",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "430244f6-a625-4006-806a-d59f2bf87a58",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "34fce87a-51ba-4412-bc4f-ed948564d497",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "af8fdeb6-0294-4023-a68e-5b344c6f4637",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "734f6f6e-b455-4875-946d-99646b19a320",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "10368690-4846-44d0-abea-b0742519440d",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "81e52ff3-8787-48df-86df-752b9defef4e",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0c17c7c7-c8b3-4165-aebd-57a087b89444",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "224db879-d46f-4350-9229-279b5df16368",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6e8a1722-9520-44d5-810c-40542a98e7b6",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f75caf18-d7b8-42f4-b75e-4d9b5657bd7c",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "503f718c-f65b-4909-a5f6-5cdbdb5eec3c",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "25fe8593-d77a-45ea-a21b-b037506f8dc3",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "745816cf-8651-4d73-86f3-a7aaba0f92c6",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f486c7a-76a0-492c-9495-124d18c31d77",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "1909136e-c953-4946-a1e3-3ce961dde13c",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "f8156d99-acc9-4c7b-a911-ff63923a1005",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.1.4",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}